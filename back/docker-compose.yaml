version: "3.8"

services:
  # Сервис базы данных PostgreSQL
  db:
    image: postgres:15
    restart: always
    container_name: NIC_astrawood_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_HOST=db
    env_file:
      - .env
    networks:
      - nic_astrawood_network

  # Основной сервис приложения (например, Django)
  nic_astrawood:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: nic_astrawood
    expose:
      - 8000
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      - DEBUG=False
      - POSTGRES_HOST=db
    env_file:
      - .env
    volumes:
      - static_volume:/staticfiles
      - ./media:/media  # Монтируем media из проекта в контейнер
    networks:
      - nic_astrawood_network

  # Сервис для Nginx
  nginx:
    image: nginx:latest
    restart: always
    container_name: nic_astrawood-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./media:/media  # Монтирование media директории
      - ./staticfiles:/staticfiles
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - nic_astrawood
    networks:
      - nic_astrawood_network

  pgadmin:
    image: dpage/pgadmin4
    container_name: nic_astrawood_pgadmin4
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: admin123321
      POSTGRESQL_HOST: db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - nic_astrawood_network

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: nic_astrawood_celery_worker
    command: celery -A backend_api worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - nic_astrawood_network

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: nic_astrawood_celery_beat
    command: celery -A backend_api beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - nic_astrawood_network

  redis:
    image: redis:alpine
    restart: always
    container_name: nic_astrawood_redis
    networks:
      - nic_astrawood_network

networks:
  nic_astrawood_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
  pgadmin_data: